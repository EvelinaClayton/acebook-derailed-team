version: 2
jobs:
  build:
    working_directory: ~/acebook-derailed-team
    docker:
      - image: circleci/ruby:2.5.0-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: root
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: 0680bac98dcfb4576899d261630560de30fe55d58c3a36859766c4c0bb5a3b6c

      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: acebook-derailed-team_test

    steps:
      - checkout

      - run:
          name: Installing latest bundler
          command: gem install bundler

      # - run:
      #     name: Add Node.js PPA
      #     command: 'curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -'

      # - run:
      #     name: Install Node.js
      #     command:  'sudo apt-get install nodejs'

      # - run:
      #     name: Install, Configure & Start Postgres
      #     command: sudo apt-get install wget ca-certificates ; wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - ; sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list' ; sudo apt-get install postgresql postgresql-contrib ; sudo update-rc.d postgresql enable ; sudo service postgresql start
      - restore_cache:
          keys:
            - acebook-derailed-{{ checksum "Gemfile.lock" }}
            - acebook-derailed-

      - run:
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      - save_cache:
          key: acebook-derailed-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      # - run:
      #     name: become root
      #     command:  "sudo  -i"

      # - run: dockerize -wait tcp://localhost:5432 -timeout 1m

      # - run: cp .sample.env .env

      - run:
          name: Setup Database
          command: bundle exec rake db:create

      - run:
          name: database migration
          command: bundle exec rake db:migrate

      - run:
          name: run schema
          command: bundle exec rake db:schema:load

      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: notify codeclimate of pending report
          command: cc-test-reporter before-build

      - run:
          name: Run tests
          command: bundle exec rspec

      - run:
          name: close codeclimate report
          command: cc-test-reporter after-build

      - run:
          name: run Rubocop
          command: bundle exec rubocop
